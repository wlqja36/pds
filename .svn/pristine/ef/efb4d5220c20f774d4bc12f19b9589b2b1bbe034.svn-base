(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        this.on_create = function()
        {
            // Declare Reference
            var obj = null;
            
            if (Form == this.constructor) {
                this.set_name("Business_Trip");
                this.set_titletext("New Form");
                this._setFormPosition(0,0,1019,595);
            }

            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("ds_search", this);
            obj._setContents("<ColumnInfo><Column id=\"searchCondition\" type=\"STRING\" size=\"256\"/><Column id=\"searchKeyword\" type=\"STRING\" size=\"256\"/><Column id=\"searchMonth\" type=\"DATE\" size=\"256\"/><Column id=\"searchDate\" type=\"DATE\" size=\"256\"/><Column id=\"searchEmpNo\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"searchKeyword\"/><Col id=\"searchCondition\"/></Row></Rows>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_yn", this);
            obj._setContents("<ColumnInfo><Column id=\"code\" type=\"STRING\" size=\"256\"/><Column id=\"data\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"code\">Y</Col><Col id=\"data\">Y</Col></Row><Row><Col id=\"code\">N</Col><Col id=\"data\">N</Col></Row></Rows>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_attendance_detail", this);
            obj.set_keystring("S:attendDate");
            obj._setContents("<ColumnInfo><Column id=\"empNo\" type=\"STRING\" size=\"12\"/><Column id=\"attendDate\" type=\"DATE\" size=\"256\"/><Column id=\"attitudeBookId\" type=\"STRING\" size=\"256\"/><Column id=\"startTime\" type=\"STRING\" size=\"256\"/><Column id=\"endTime\" type=\"STRING\" size=\"256\"/><Column id=\"holidayYn\" type=\"STRING\" size=\"1\"/><Column id=\"attendCode\" type=\"STRING\" size=\"4\"/><Column id=\"attendCodeName\" type=\"STRING\" size=\"256\"/><Column id=\"empName\" type=\"STRING\" size=\"256\"/><Column id=\"REG_EMP_ID\" type=\"STRING\" size=\"256\"/><Column id=\"EMP_REAL\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"attendCode\"/></Row></Rows>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_attendCode", this);
            obj._setContents("<ColumnInfo><Column id=\"code\" type=\"STRING\" size=\"256\"/><Column id=\"data\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"data\">정근</Col><Col id=\"code\">2110</Col></Row><Row><Col id=\"data\">지각</Col><Col id=\"code\">2120</Col></Row><Row><Col id=\"data\">결근</Col><Col id=\"code\">2130</Col></Row><Row><Col id=\"data\">조퇴</Col><Col id=\"code\">2140</Col></Row><Row><Col id=\"data\">휴무</Col><Col id=\"code\">2150</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            
            // UI Components Initialize
            obj = new ImageViewer("img02", "absolute", "14", "454", "990", "85", null, null, this);
            obj.set_taborder("0");
            obj.style.set_background("lavenderblush");
            obj.style.set_border("1 solid #a8a8a8ff");
            obj.style.set_align("left middle");
            this.addChild(obj.name, obj);

            obj = new ImageViewer("img_titlebg", "absolute", "14", "7", "989", "50", null, null, this);
            obj.set_taborder("4");
            obj.style.set_background("#3366ffff");
            obj.style.set_color("#ffffffff");
            this.addChild(obj.name, obj);

            obj = new Static("sta_title", "absolute", "26", "18", "168", "29", null, null, this);
            obj.set_taborder("5");
            obj.set_text("출결정보");
            obj.style.set_color("whitesmoke");
            obj.style.set_align("left middle");
            obj.style.set_font("굴림,12,bold");
            this.addChild(obj.name, obj);

            obj = new Static("sta_33", "absolute", "14", "115", "120", "13", null, null, this);
            obj.set_taborder("8");
            obj.set_text("출결상세관리");
            obj.style.set_color("#46463dff");
            obj.style.set_align("center top");
            obj.style.set_font("bold 9 굴림");
            this.addChild(obj.name, obj);

            obj = new ImageViewer("img_05", "absolute", "15", "68", "988", "33", null, null, this);
            obj.set_taborder("53");
            obj.style.set_background("lavenderblush");
            obj.style.set_border("1 solid #a8a8a8ff");
            obj.style.set_align("left middle");
            this.addChild(obj.name, obj);

            obj = new Static("sta_15", "absolute", "20", "461", "115", "25", null, null, this);
            obj.set_taborder("60");
            obj.set_text("대장명");
            obj.style.set_background("#f4edfaff");
            obj.style.set_border("1 solid #c8c8c8ff");
            obj.style.set_color("#133678ff");
            obj.style.set_align("center middle");
            obj.style.set_font("굴림,9,bold");
            this.addChild(obj.name, obj);

            obj = new Edit("edt_att_book_no", "absolute", "138", "461", "386", "22", null, null, this);
            obj.set_taborder("61");
            obj.set_readonly("true");
            this.addChild(obj.name, obj);

            obj = new Static("sta_02", "absolute", "20", "484", "115", "25", null, null, this);
            obj.set_taborder("102");
            obj.set_text("사원명");
            obj.style.set_background("#f4edfaff");
            obj.style.set_border("1 solid #c8c8c8ff");
            obj.style.set_color("#133678ff");
            obj.style.set_align("center middle");
            obj.style.set_font("굴림,9,bold");
            this.addChild(obj.name, obj);

            obj = new Edit("searchEmpNo", "absolute", "263", "73", "118", "22", null, null, this);
            obj.set_taborder("103");
            obj.set_readonly("true");
            this.addChild(obj.name, obj);

            obj = new Button("button04", "absolute", "376", "73", "25", "22", null, null, this);
            obj.set_taborder("104");
            obj.set_cssclass("btn_WF_SearchSmall");
            obj.set_enable("false");
            this.addChild(obj.name, obj);

            obj = new Button("Button01", "absolute", "772", "554", "55", "23", null, null, this);
            obj.set_taborder("105");
            obj.set_text("추가");
            obj.style.set_background("URL('img::btn_WFSA_Search_N.png') stretch 9,9 left top");
            obj.style.set_border("1 solid #999999ff");
            obj.style.set_color("white");
            obj.style.set_bordertype("round 3 3");
            obj.style.set_font("bold 9 Dotum");
            obj.style.set_cursor("hand");
            obj.style.set_gradation("linear 0,0 #fefefeff 0,100 #ecece5ff");
            this.addChild(obj.name, obj);

            obj = new Button("insert00", "absolute", "830", "554", "55", "23", null, null, this);
            obj.set_taborder("106");
            obj.set_text("등록");
            obj.style.set_background("URL('img::btn_WFSA_Search_N.png') stretch 9,9 left top");
            obj.style.set_border("1 solid #999999ff");
            obj.style.set_color("white");
            obj.style.set_bordertype("round 3 3");
            obj.style.set_font("bold 9 Dotum");
            obj.style.set_gradation("linear 0,0 #fefefeff 0,100 #ecece5ff");
            this.addChild(obj.name, obj);

            obj = new Button("Button02", "absolute", "888", "554", "55", "23", null, null, this);
            obj.set_taborder("107");
            obj.set_text("삭제");
            obj.style.set_background("URL('img::btn_WFSA_Search_N.png') stretch 9,9 left top");
            obj.style.set_border("1 solid #999999ff");
            obj.style.set_color("white");
            obj.style.set_bordertype("round 3 3");
            obj.style.set_font("bold 9 Dotum");
            obj.style.set_gradation("linear 0,0 #fefefeff 0,100 #ecece5ff");
            this.addChild(obj.name, obj);

            obj = new Button("reset", "absolute", "946", "554", "52", "23", null, null, this);
            obj.set_taborder("108");
            obj.set_text("취소");
            obj.style.set_background("URL('img::btn_WFSA_Search_N.png') stretch 9,9 left top");
            obj.style.set_border("1 solid #999999ff");
            obj.style.set_color("white");
            obj.style.set_bordertype("round 3 3");
            obj.style.set_font("bold 9 Dotum");
            obj.style.set_gradation("linear 0,0 #fefefeff 0,100 #ecece5ff");
            this.addChild(obj.name, obj);

            obj = new Edit("empNo", "absolute", "138", "485", "255", "22", null, null, this);
            obj.set_taborder("116");
            obj.set_readonly("true");
            this.addChild(obj.name, obj);

            obj = new Static("Static00", "absolute", "39", "465", "17", "20", null, null, this);
            obj.set_taborder("117");
            obj.set_text("*");
            obj.style.set_color("red");
            obj.style.set_font("arial,18");
            this.addChild(obj.name, obj);

            obj = new Static("Static01", "absolute", "39", "489", "17", "18", null, null, this);
            obj.set_taborder("118");
            obj.set_text("*");
            obj.style.set_color("red");
            obj.style.set_font("arial,18");
            this.addChild(obj.name, obj);

            obj = new Static("sta_00", "absolute", "532", "483", "115", "25", null, null, this);
            obj.set_taborder("119");
            obj.set_text("관리일자");
            obj.style.set_background("#f4edfaff");
            obj.style.set_border("1 solid #c8c8c8ff");
            obj.style.set_color("#133678ff");
            obj.style.set_align("center middle");
            obj.style.set_font("굴림,9,bold");
            this.addChild(obj.name, obj);

            obj = new Calendar("attendDate", "absolute", "651", "485", "126", "19", null, null, this);
            this.addChild(obj.name, obj);
            obj.set_taborder("120");
            obj.style.set_align("center middle");
            obj.set_readonly("true");

            obj = new Static("Static02", "absolute", "551", "489", "17", "18", null, null, this);
            obj.set_taborder("123");
            obj.set_text("*");
            obj.style.set_color("red");
            obj.style.set_font("arial,18");
            this.addChild(obj.name, obj);

            obj = new Static("sta_11", "absolute", "20", "508", "115", "25", null, null, this);
            obj.set_taborder("125");
            obj.set_text("출근시간");
            obj.style.set_background("#f4edfaff");
            obj.style.set_border("1 solid #c8c8c8ff");
            obj.style.set_color("#133678ff");
            obj.style.set_align("center middle");
            obj.style.set_font("굴림,9,bold");
            this.addChild(obj.name, obj);

            obj = new Static("sta_12", "absolute", "275", "508", "118", "25", null, null, this);
            obj.set_taborder("127");
            obj.set_text("퇴근시간");
            obj.style.set_background("#f4edfaff");
            obj.style.set_border("1 solid #c8c8c8ff");
            obj.style.set_color("#133678ff");
            obj.style.set_align("center middle");
            obj.style.set_font("굴림,9,bold");
            this.addChild(obj.name, obj);

            obj = new Static("sta_14", "absolute", "532", "507", "115", "25", null, null, this);
            obj.set_taborder("129");
            obj.set_text("휴일여부");
            obj.style.set_background("#f4edfaff");
            obj.style.set_border("1 solid #c8c8c8ff");
            obj.style.set_color("#133678ff");
            obj.style.set_align("center middle");
            obj.style.set_font("굴림,9,bold");
            this.addChild(obj.name, obj);

            obj = new Radio("holidayYn", "absolute", "681", "509", "104", "22", null, null, this);
            this.addChild(obj.name, obj);
            obj.set_taborder("130");
            obj.set_innerdataset("@ds_yn");
            obj.set_codecolumn("code");
            obj.set_datacolumn("data");
            obj.set_value("N");
            obj.set_direction("vertical");
            obj.set_index("1");

            obj = new Static("sta_17", "absolute", "784", "506", "103", "25", null, null, this);
            obj.set_taborder("131");
            obj.set_text("출결상태");
            obj.style.set_background("#f4edfaff");
            obj.style.set_border("1 solid #c8c8c8ff");
            obj.style.set_color("#133678ff");
            obj.style.set_align("center middle");
            obj.style.set_font("굴림,9,bold");
            this.addChild(obj.name, obj);

            obj = new Combo("attendCode", "absolute", "893", "510", "105", "21", null, null, this);
            this.addChild(obj.name, obj);
            obj.set_taborder("132");
            obj.style.set_align("left middle");
            obj.set_displayrowcount("-1");
            obj.set_value("2110");
            obj.set_text("정근");
            obj.set_codecolumn("code");
            obj.set_datacolumn("data");
            obj.set_innerdataset("@ds_attendCode");
            obj.set_index("0");

            obj = new Grid("Grid00", "absolute", "14", "139", "989", "298", null, null, this);
            obj.set_taborder("133");
            obj.set_binddataset("ds_attendance_detail");
            obj._setContents("<Formats><Format id=\"default\"><Columns><Column size=\"141\"/><Column size=\"141\"/><Column size=\"141\"/><Column size=\"149\"/><Column size=\"141\"/><Column size=\"141\"/><Column size=\"134\"/></Columns><Rows><Row size=\"24\" band=\"head\"/><Row size=\"24\"/></Rows><Band id=\"head\"><Cell text=\"사원명\"/><Cell col=\"1\" text=\"관리일자\"/><Cell col=\"2\" text=\"대장명\"/><Cell col=\"3\" text=\"출근시간\"/><Cell col=\"4\" text=\"퇴근시간\"/><Cell col=\"5\" text=\"휴일여부\"/><Cell col=\"6\" text=\"출결상태\"/></Band><Band id=\"body\"><Cell text=\"bind:empNo\"/><Cell col=\"1\" text=\"bind:attendDate\"/><Cell col=\"2\" text=\"bind:attitudeBookId\"/><Cell col=\"3\" displaytype=\"normal\" edittype=\"date\" text=\"bind:startTime\" mask=\"HH:mm\"/><Cell col=\"4\" edittype=\"date\" text=\"bind:endTime\" mask=\"HH:mm\"/><Cell col=\"5\" edittype=\"combo\" text=\"bind:holidayYn\" combodataset=\"ds_yn\" combocodecol=\"code\" combodatacol=\"data\"/><Cell col=\"6\" displaytype=\"combo\" edittype=\"combo\" text=\"bind:attendCode\" combodataset=\"ds_attendCode\" combocodecol=\"code\" combodatacol=\"data\"/></Band></Format></Formats>");
            this.addChild(obj.name, obj);

            obj = new Static("sta_03", "absolute", "784", "483", "213", "24", null, null, this);
            obj.set_taborder("134");
            obj.style.set_background("#f4edfaff");
            obj.style.set_border("1 solid #c8c8c8ff");
            obj.style.set_color("#133678ff");
            obj.style.set_align("center middle");
            obj.style.set_font("굴림,9,bold");
            this.addChild(obj.name, obj);

            obj = new Button("button00", "absolute", "367", "485", "26", "21", null, null, this);
            obj.set_taborder("139");
            obj.set_cssclass("btn_WF_SearchSmall");
            obj.set_visible("false");
            obj.set_enable("true");
            obj.set_enableevent("true");
            this.addChild(obj.name, obj);

            obj = new Calendar("startTime", "absolute", "138", "510", "134", "20", null, null, this);
            this.addChild(obj.name, obj);
            obj.set_taborder("142");
            obj.set_type("spin");
            obj.set_dateformat("HH:mm");
            obj.set_value("null");
            obj.set_editformat("HH:mm");

            obj = new Calendar("endTime", "absolute", "397", "510", "127", "20", null, null, this);
            this.addChild(obj.name, obj);
            obj.set_taborder("143");
            obj.set_dateformat("HH:mm");
            obj.set_value("null");
            obj.set_editformat("HH:mm");
            obj.set_type("spin");

            obj = new Button("attendance_today", "absolute", "471", "73", "76", "23", null, null, this);
            obj.set_taborder("145");
            obj.set_text("출결생성");
            obj.style.set_background("URL('img::btn_WFSA_Search_N.png') stretch 9,9 left top");
            obj.style.set_border("1 solid #999999ff");
            obj.style.set_color("white");
            obj.style.set_font("bold 9 Dotum");
            obj.style.set_cursor("hand");
            this.addChild(obj.name, obj);

            obj = new Combo("Combo00", "absolute", "149", "74", "114", "21", null, null, this);
            this.addChild(obj.name, obj);
            var Combo00_innerdataset = new Dataset("Combo00_innerdataset", this.Combo00);
            Combo00_innerdataset._setContents("<ColumnInfo><Column id=\"codecolumn\" size=\"256\"/><Column id=\"datacolumn\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"codecolumn\"/><Col id=\"datacolumn\">전체</Col></Row><Row><Col id=\"codecolumn\">mngDate</Col><Col id=\"datacolumn\">관리일자</Col></Row><Row><Col id=\"codecolumn\">mngMonth</Col><Col id=\"datacolumn\">관리월</Col></Row><Row><Col id=\"codecolumn\">mngEmp</Col><Col id=\"datacolumn\">사원명</Col></Row></Rows>");
            obj.set_innerdataset(Combo00_innerdataset);
            obj.set_taborder("146");
            obj.set_text("전체");
            obj.set_codecolumn("codecolumn");
            obj.set_datacolumn("datacolumn");
            obj.set_index("0");

            obj = new Edit("empNo_NOT", "absolute", "2.55%", "555", null, "21", "93.42%", null, this);
            obj.set_taborder("147");
            obj.set_visible("true");
            this.addChild(obj.name, obj);

            obj = new Edit("strParam", "absolute", "7.85%", "555", null, "21", "88.42%", null, this);
            obj.set_taborder("148");
            obj.set_visible("true");
            this.addChild(obj.name, obj);

            obj = new Calendar("searchMonth", "absolute", "272", "73", "130", "23", null, null, this);
            this.addChild(obj.name, obj);
            obj.set_taborder("149");
            obj.set_type("spin");
            obj.set_dateformat("yyyy-MM");
            obj.set_value("null");
            obj.set_editformat("yyyy-MM");
            obj.set_visible("false");

            obj = new Calendar("searchDate", "absolute", "272", "73", "130", "23", null, null, this);
            this.addChild(obj.name, obj);
            obj.set_taborder("151");
            obj.set_visible("false");

            obj = new Button("Button05", "absolute", "409", "73", "55", "23", null, null, this);
            obj.set_taborder("152");
            obj.set_text("검색");
            obj.style.set_background("URL('img::btn_WFSA_Search_N.png') stretch 9,9 left top");
            obj.style.set_border("1 solid #999999ff");
            obj.style.set_color("white");
            obj.style.set_bordertype("round 3 3");
            obj.style.set_font("bold 9 Dotum");
            obj.style.set_cursor("hand");
            obj.style.set_gradation("linear 0,0 #fefefeff 0,100 #ecece5ff");
            this.addChild(obj.name, obj);

            obj = new Static("sta_04", "absolute", "26", "72", "115", "25", null, null, this);
            obj.set_taborder("153");
            obj.set_text("검색조건");
            obj.style.set_background("#f4edfaff");
            obj.style.set_border("1 solid #c8c8c8ff");
            obj.style.set_color("#133678ff");
            obj.style.set_align("center middle");
            obj.style.set_font("굴림,9,bold");
            this.addChild(obj.name, obj);

            obj = new Edit("searchEmpNo_NOT", "absolute", "12.66%", "557", null, "20", "83.81%", null, this);
            obj.set_taborder("154");
            obj.set_visible("true");
            this.addChild(obj.name, obj);


            
            // Layout Functions
            //-- Default Layout
            obj = new Layout("default", "", 1019, 595, this,
            	//-- Layout function
            	function(p) {
            		p.set_classname("Temp01_SingleDetail");
            		p.set_titletext("New Form");

            	}
            );
            this.addLayout(obj.name, obj);


            
            // BindItem Information
            obj = new BindItem("item0","edt_att_book_no","value","ds_attendance_detail","attitudeBookId");
            this.addChild(obj.name, obj);
            obj.bind();
            obj = new BindItem("item1","empNo","value","ds_attendance_detail","empNo");
            this.addChild(obj.name, obj);
            obj.bind();
            obj = new BindItem("item2","attendDate","value","ds_attendance_detail","attendDate");
            this.addChild(obj.name, obj);
            obj.bind();
            obj = new BindItem("item5","holidayYn","value","ds_attendance_detail","holidayYn");
            this.addChild(obj.name, obj);
            obj.bind();
            obj = new BindItem("item6","attendCode","value","ds_attendance_detail","attendCode");
            this.addChild(obj.name, obj);
            obj.bind();
            obj = new BindItem("item3","startTime","value","ds_attendance_detail","startTime");
            this.addChild(obj.name, obj);
            obj.bind();
            obj = new BindItem("item4","endTime","value","ds_attendance_detail","endTime");
            this.addChild(obj.name, obj);
            obj.bind();
            obj = new BindItem("item26","empNo_NOT","displaynulltext","ds_attendance_detail","EMP_REAL");
            this.addChild(obj.name, obj);
            obj.bind();
            obj = new BindItem("item27","empNo_NOT","value","ds_attendance_detail","EMP_REAL");
            this.addChild(obj.name, obj);
            obj.bind();

            
            // Remove Reference
            obj = null;
        };
        

        
        // User Script
        this.addIncludeScript("PD_IN_COM_ATTENDANCE_DETAIL.xfdl", "Lib::Comm.xjs");
        this.registerScript("PD_IN_COM_ATTENDANCE_DETAIL.xfdl", function() {
        //include "Lib::Comm.xjs";

        var imsisave = "";

        //부모창 파라미터받기
        var strParam1 = this.parent.param1;
           
        //기존 출결대장의 maxDate   
        this.selectMaxDate="";   
          
        //currentRow
        this.rowPosition="";

        //출결만들기 확인여부

        var makeAttendance="";

        //평일이지만 대체공휴일인지확인
        var holiday_wd="";

        
        this.form_onload = function(obj,e)
        {
        	//기본 공통  함수 초기화
        	Iject.formOnload(obj);	
            
            this.ds_search.setColumn(0, "searchCondition",this.strParam1)
            
            this.strParam.set_value(strParam1);

            this.fn_onloadList();
            
            this.fn_selectMaxDate();
           
         
         
        } 

        
        //Date를 XDate로
        this.formatDate=function(date) {
         
         
           var year = date.getFullYear().toString().padLeft(4, "0");
            var month = (date.getMonth()+1).toString().padLeft(2, "0");
            var day = date.getDate().toString().padLeft(2, "0");
            
           
         return year+month+day;
         
         
         
         
         
         /*var d = date, 
           month = '' + (d.getMonth() + 1), 
           day = '' + d.getDate(), 
           year = d.getFullYear(); 
           
           
           if (month.length < 2) 
             month = '0' + month; 
           if (day.length < 2)
             day = '0' + day; 
             
             return [year, month, day].join('-'); */
         
         }

        

        

        

        

        //행추가
        this.Button01_onclick = function(obj,e)
        {
        	
        	this.ds_attendance_detail.clearData();

        	var nRow = this.ds_attendance_detail.addRow();
            this.edt_att_book_no.set_value(strParam1); 
            
            var empNo = this.empNo.value; //<---- 아름추가 
            trace("사원번호 찍힘? : ", empNo); //<---- 아름추가 
            this.empNo_NOT.set_value(empNo); //<---- 아름추가 
        	
        	this.attendDate.set_readonly("false");
        	this.button00.set_visible("true");
        	this.searchEmpNo.set_value("");
        	
        	this.attendCode.set_index("0");
        	this.holidayYn.set_index("1");
        	
        	//오늘날짜로 세팅
             var today=new Date();
            this.attendDate.set_value(this.formatDate(today));
        	
        	//출퇴근시간 세팅
        	this.startTime.set_value("0900");
             
            this.endTime.set_value("1800"); 
            
            //배치프로그램 세팅(등록자사번)
        	
        	this.ds_attendance_detail.setColumn(this.ds_attendance_detail.rowposition, "REG_EMP_ID",application.gds_User.getColumn(application.gds_User.rowposition, "sabun"));
        	
        	
        }

        

        

        //삭제
        this.Button03_onclick = function(obj,e)
        {

         	
        	var nRow = this.ds_attendance_detail.rowposition;
        	this.ds_attendance_detail.deleteRow(nRow);
        	var rtnValue = Iject.confirm("삭제 하시겠습니까?");

        	if(rtnValue){  
        		this.fn_save("delete");
        	}else{
        		Iject.alert("삭제실패");
        	}
        }

        

        
        //리셋
        this.fn_reset_onclick = function(obj,e)
        {
        	//this.ds_user.reset();
        }

        
        //저장
        this.fn_save = function(strid)
        {

           var year=this.attendDate.value.getFullYear();
           var month=this.attendDate.value.getMonth();
           var date=this.attendDate.value.getDate();

        
            this.startTime.value.setYear(year);  
            this.startTime.value.setMonth(month);
            this.startTime.value.setDate(date);
            
            this.endTime.value.setYear(year);  
            this.endTime.value.setMonth(month);
            this.endTime.value.setDate(date);
            
            

        	this.ds_attendance_detail.setColumn(this.ds_attendance_detail.rowposition, "empNo", this.empNo_NOT.value);
        	this.ds_attendance_detail.setColumn(this.ds_attendance_detail.rowposition, "startTime", this.startTime.value);
            this.ds_attendance_detail.setColumn(this.ds_attendance_detail.rowposition, "endTime", this.endTime.value);
            this.ds_attendance_detail.setColumn(this.ds_attendance_detail.rowposition, "attitudeBookId", this.strParam.value);
        	
        	trace("this.empNo_NOT.value",this.empNo_NOT.value);
        	
        	rowPosition=this.Grid00.currentrow;
        	//Iject.alert(rowPosition);
        	
        	var oDatas =  {
        			  svcid : strid,
        			  sController : "attendanceModifyVO.do",			 
        			  inds :["input1=ds_attendance_detail:U"
        			        ],
        			  outds :[
        				 "ds_attendance_detail=output1"
        			     ],			     
        			  args  : [	""			
        			  ],
        			  bAsync : true,    // 비동기여부 (true : async  false: sync)
        			  nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			  bCompress :false,	 //			  
        			}; 
        			
            //공통 transaction 함수 호츨   //function callback 
        	Iject.transaction(this,oDatas,function(){   
        		
        		if(this.errorcode < 0)
        		{
        		   Iject.alert(this.errorMsg,"알림");			
        		   return;
        		}			
        	      
        	       Iject.alert("완료");
        	      
               var pThis = this.fobj;   //form object
              // pThis.searchEmpNo_onchanged() ;
               pThis.fn_onloadList();

        

        
        	});

        	
        }

        
        //저장버튼 클릭시 
        this.div_Detail_insert_onclick = function(obj,e)
        {
            

        	this.fn_save("save");
        		
        }

        

        //페이지 onload시 대장으로 전체조회

        this. fn_onloadList=function(){

        

        
            
            var searchCondition = strParam1;    
            //Iject.alert(searchCondition);
          
        	//this.ds_search.setColumn(0, "searchKeyword", searchKeyword);
        	//this.ds_search.clearData();

        	this.ds_search.setColumn(0, "searchCondition",searchCondition);
        	
        	
        	 
            
           
           var oDatas =  {
        			  svcid : "searchAttendanceList",
        			  sController : "attendanceListSelectVO.do",			 
        			  inds :["ds_search=ds_search"],
        			  outds :[
        				 "ds_attendance_detail=output1"
        				 
        			     ],			     
        			  args  : [				
        			  ],
        			  bAsync : true,    // 비동기여부 (true : async  false: sync)
        			  nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			  bCompress :false,	 //			  
        			}; 
        			
        	 trace(" this.ds_search : " + this.ds_search.saveXML());
        	  
            //공통 transaction 함수 호츨   //function callback 
        	Iject.transaction(this,oDatas,function(){   
        		
        	
        		if(this.errorcode < 0)
        		{
        		   Iject.alert(this.errorMsg);			
        		   return;
        		}
        	      
        	       var pThis = this.fobj;   //form object	      
        	       trace(" ds_attendance_detail : " + pThis.ds_attendance_detail.saveXML());
        	       
        		   if(rowPosition!=0){
        	 pThis.ds_attendance_detail.moveRow(rowPosition,rowPosition);
        	 pThis.Grid00.selectRow(rowPosition);
        	 }

        

        

        });

        }

        

        

        //
        this.Button00_onclick = function(obj,e)
        {
        	
        	
        	 
           var searchKeyword = this.searchEmpNo.value.substr(0,12);  
           // Iject.alert(searchKeyword);
            
         	//this.ds_search.setColumn(0, "searchCondition", "empNo");
        	this.ds_search.setColumn(0, "searchKeyword", searchKeyword);

        	
         
           
           var oDatas =  {
        			  svcid : "searchAttendance",
        			  sController : "attendanceListSelectVO.do",			 
        			  inds :["ds_search=ds_search"],
        			  outds :[
        				 "ds_attendance_detail=output1"
        				 
        			     ],			     
        			  args  : [				
        			  ],
        			  bAsync : true,    // 비동기여부 (true : async  false: sync)
        			  nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			  bCompress :false,	 //			  
        			}; 
        			
        	 trace(" this.ds_search : " + this.ds_search.saveXML());
        	  
            //공통 transaction 함수 호츨   //function callback 
        	Iject.transaction(this,oDatas,function(){   
        		
        	
        		if(this.errorcode < 0)
        		{
        		   Iject.alert(this.errorMsg);			
        		   return;
        		} 
        	      
        	       var pThis = this.fobj;   //form object	      
        	       trace(" ds_attendance_detail : " + pThis.ds_attendance_detail.saveXML());
        	     
        	     
        	  
        	       
        	       
        	       
        	});//트랜잭션함수끝

        	
        	
        	
        	
        }

        
        //대장+사번찾기 상단
        this.button04_onclick = function(obj,e)
        {
        	
        	
        	
        	
        	
        	var nLeft = system.clientToScreenX(this, 10);
        	var nTop = system.clientToScreenY(this, 10);
        	 
        	var empSearch = new ChildFrame;
        	empSearch.init("attendanceEmp"
        					, "absolute", nLeft, nTop, 300, 250, null, null
        					, "member::atEmpSearch.xfdl");
        	
        	
        	
        	empSearch.set_openalign("center middle");
        	empSearch.set_dragmovetype("all");
        	

        	
        		var objParam = {param2:this.strParam1
          					 	};
        	
        	/* empSearch.showModal(this.getOwnerFrame()
             			  , objParam
        				      , this
             			  , "fn_popupCallback");*/
             			  
             
                  			  
              var emp_NoName = system.showModalWindow(empSearch, 
                              "searchEmpNo",
                              this.getOwnerFrame(),
                              "",
                              this);			  
        	

        	  var objArr = emp_NoName.split(/,/g, 2);      
        	  this.searchEmpNo.set_value(objArr[0] + "(" + objArr[1] + ")");
              this.searchEmpNo_NOT.set_value(objArr[1]);
              this.Button05_onclick();
         		  
             			  
        	
        	
        }

        
        //모든종류의 사원찾기 콜백함수
        this.fn_popupCallback = function(strPopupID,strReturn)
        {
            if(strReturn == undefined){
                return;
            }

            if(strPopupID == "attendanceEmp"){
                //this.alert("Return Value: " + strReturn);
               // this.searchEmpNo.set_value(strReturn);
                //this.empNo.set_value(strReturn);
               
                
                
               
                
            }else if(strPopupID == "attendanceEmp1"){
                //this.alert("Return Value: " + strReturn);
                this.empNo.set_value(strReturn);
             }else if(strPopupID == "fixEmpSearch"){
                //this.alert("Return Value: " + strReturn);
                this.fix_emp_id.set_value(strReturn);
             }

        }

        

        
         //object 인자 생성함수
         this.fn_parent = function(pObj)
         {
             this.ds_parent.copyData(pObj);
        };

        

        //모달에서 사번입력되면 바로 조회
        this.searchEmpNo_onchanged = function(obj,e)
        {

            
            //Iject.alert(this.searchEmpNo.value);
           var searchKeyword = this.searchEmpNo.value.substr(0,12);  
            //Iject.alert(searchKeyword);
                
                
            var searchCondition=strParam1;
            //Iject.alert(searchCondition);
            this.ds_search.setColumn(0, "searchCondition",searchCondition );
        	this.ds_search.setColumn(0, "searchKeyword", searchKeyword);
        	this.ds_search.setColumn(0, "searchCondition", strParam1);

        	
         
           
           var oDatas =  {
        			  svcid : "searchAttendance",
        			  sController : "attendanceListSelectVO.do",			 
        			  inds :["ds_search=ds_search"],
        			  outds :[
        				 "ds_attendance_detail=output1"
        				 
        			     ],			     
        			  args  : [				
        			  ],
        			  bAsync : true,    // 비동기여부 (true : async  false: sync)
        			  nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			  bCompress :false,	 //			  
        			}; 
        			
        	 trace(" this.ds_search : " + this.ds_search.saveXML());
        	  
            //공통 transaction 함수 호츨   //function callback 
        	Iject.transaction(this,oDatas,function(){   
        		
        	
        		if(this.errorcode < 0)
        		{
        		   Iject.alert(this.errorMsg);			
        		   return;
        		}
        	      
        	       var pThis = this.fobj;   //form object	      
        	       trace(" ds_attendance_detail : " + pThis.ds_attendance_detail.saveXML());
        	       
        	
        	 if(rowPosition!=0){
        	 pThis.ds_attendance_detail.moveRow(rowPosition,rowPosition);
        	 pThis.Grid00.selectRow(rowPosition);
        	 }
        	      
        	       
        	       
        	       
        	       
        	});//트랜잭션함수끝

        
         /* this.Grid00.setCellProperty("body", 6, "text", 
                "expr:'출결상태'=='2110'?'text':'정근'");*/
             

        

        
        }

        
        //새로등록시 사원조회
        this.button00_onclick = function(obj,e)
        {
        	
        	
        	var nLeft = system.clientToScreenX(this, 10);
        	var nTop = system.clientToScreenY(this, 10);
        	 
        	var empSearch = new ChildFrame;
        	empSearch.init("attendanceEmp1"
        					, "absolute", nLeft, nTop, 300, 250, null, null
        					, "member::atEmpSearch1.xfdl");
        	
        	
        	
        	empSearch.set_openalign("center middle");
        	empSearch.set_dragmovetype("all");
        	
        	
        	/*system.showModalWindow(empSearch, 
        							"empModal",
        							this.getOwnerFrame(),
        							"",
        							this);*/
        	
        	
        	
        	
        	
        		var objParam = {
          					 	};
        	
        	/* empSearch.showModal(this.getOwnerFrame()
             			  , objParam
        				      , this
             			  , "fn_popupCallback");*/
             			  
        	var emp_NoName = system.showModalWindow(empSearch, 
                              "attendanceEmp1",
                              this.getOwnerFrame(),
                              "",
                              this);		
        	
        	 var objArr = emp_NoName.split(/,/g, 2);      
        	  this.empNo.set_value(objArr[0] + "(" + objArr[1] + ")");
              this.empNo_NOT.set_value(objArr[1]);
             // alert(this.empNo.value);
             // alert(this.empNo_NOT.value);
        		  
        	
        	
        }

        //Date 객체 조작하기(날짜)

        /*

        this.startTime_onchanged = function(obj:MaskEdit, e:nexacro.ChangeEventInfo)
        {
        	
        	Iject.alert(this.startTime.value);
        	var time=nexacro.toNumber(this.startTime.value.substr(0,2));
        	Iject.alert(time);
        	var minute=nexacro.toNumber(this.startTime.value.substr(2,2));
        	Iject.alert(minute);
        	
        	if(time>24){
        	Iject.alert('시간은 0~24시로 입력해주세요');
        	}else if(minute>59){
        	Iject.alert('분은 0~59분으로 입력해주세요');
        	}
        	
        	
        }

        this.endTime_onchanged = function(obj:MaskEdit, e:nexacro.ChangeEventInfo)
        {
        	
        	Iject.alert(this.endTime.value);
        	var time=nexacro.toNumber(this.endTime.value.substr(0,2));
        	Iject.alert(time);
        	var minute=nexacro.toNumber(this.endTime.value.substr(2,2));
        	Iject.alert(minute);
        	
        	if(time>24){
        	Iject.alert('시간은 0~24시로 입력해주세요');
        	}else if(minute>59){
        	Iject.alert('분은 0~59분으로 입력해주세요');
        	}
        	
        	
        }
        */
        this.reloadBtn_onclick = function(obj,e)
        {
        	// this.ds_search.setColumn(0, "searchKeyword", "");

             // this.fn_onloadList();
             this.reload();
        }

        

        //최신일자 출결생성

        this.attendance_today_onclick = function(obj,e)
        {

            var objDate = new Date();
            var nDay = objDate.getDay();
            
            //selectMaxDate값 받아오기
            
           

           //평일이지만 법정공휴일인지 확인
           
           if(0<nDay<6){
           
             
             	//Iject.alert(this.selectMaxDate);

           
           holiday_WD=application.confirm(" 생성하실 출결일은 " + this.selectMaxDate+"입니다. \n 법정공휴일 혹은 대체휴일입니까?\n ( 확인 : Y / 취소 : N) ");
           
             if(holiday_WD){
             
                makeAttendance= application.confirm("출결을 생성하시겠습니까?");
             
                //평일이지만 법정공휴일인 경우
                
            var searchParam = strParam1;   
            
            
        	
        	var oDatas =  {
        			  svcid : "insertBulk",
        			  sController : "insertBulkAttendance.do",			 
        			  inds :[
        			        ],
        			  outds :[
        				 
        			     ],			     
        			  args  : [	"searchParam="+searchParam	, "holidayYn=Y"
        			  ],
        			  bAsync : true,    // 비동기여부 (true : async  false: sync)
        			  nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			  bCompress :false,	 //			  
        			}; 
        	
             
             
             
             
             }else{
             
             //정상적인 평일일 경우
                
            var searchParam = strParam1;   
            
             makeAttendance= application.confirm("출결을 생성하시겠습니까?");
            
        	var oDatas =  {
        			  svcid : "insertBulk",
        			  sController : "insertBulkAttendance.do",			 
        			  inds :[
        			        ],
        			  outds :[
        				 
        			     ],			     
        			  args  : [	"searchParam="+searchParam, "holidayYn=N"		
        			  ],
        			  bAsync : true,    // 비동기여부 (true : async  false: sync)
        			  nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			  bCompress :false,	 //			  
        			}; 
        	
               
             
             }
           
           
           }else{
           
           //주말인 경우
           
            var searchParam = strParam1;   
            
             makeAttendance= application.confirm(" 생성하실 출결일은 " + this.selectMaxDate+"입니다. \n 출결을 생성하시겠습니까?");
           
           
           
        	var oDatas =  {
        			  svcid : "insertBulk",
        			  sController : "insertBulkAttendance.do",			 
        			  inds :[
        			        ],
        			  outds :[
        				 
        			     ],			     
        			  args  : [	"searchParam="+searchParam , "holidayYn=Y"		
        			  ],
        			  bAsync : true,    // 비동기여부 (true : async  false: sync)
        			  nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			  bCompress :false,	 //			  
        			}; 
           
           
           
          }
             

        	
        			
        	
        			
            if(makeAttendance){
        	
        	Iject.transaction(this,oDatas,function(){   
        		
        		if(this.errorcode < 0)
        		{
        		   Iject.alert(this.errorMsg,"알림");			
        		   return;
        		}			
        	      
        	       Iject.alert("완료");
        	      
               var pThis = this.fobj;   //form object
              pThis.reload() ;
               

        

        	});

        }
        	
        }

        

        
        // selectMaxDate

        this. fn_selectMaxDate=function(){

            
            var searchCondition = strParam1;    
           
           	this.ds_search.setColumn(0, "searchCondition",searchCondition);
        	 
            
            var oDatas =  {
        			      svcid : "selectMaxDate",
        			      sController : "selectMaxDate.do",			 
        			      inds :["ds_search=ds_search"],
        			      outds :[
        				 
        			        ],			     
        			      args  : [ 
        			        ],
        			      bAsync : true,    // 비동기여부 (true : async  false: sync)
        			      nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			      bCompress :false,	 //			  
        		       	}; 
        			
        	 trace(" this.ds_search : " + this.ds_search.saveXML());
        	  
            //공통 transaction 함수 호츨   //function callback 
        	Iject.transaction(this,oDatas,function(){   
        		
        	
        		if(this.errorcode < 0)
        		{
        		   Iject.alert(this.errorMsg);			
        		   return;
        		}
        		
        		  
        	

        

        

        });

        }

        	

        
        this.fn_reset = function(obj,e)
        {
        	this.reload();
        }

        

        
        //조회버튼
        this.Button05_onclick = function(obj,e)
        {
        	
            var searchCondition = strParam1; 	
            var searchKeyword = this.Combo00.value;     
            var searchMonth=this.searchMonth.value;
            var searchDate=this.searchDate.value;
            var searchEmpNo=this.searchEmpNo_NOT.value;
           // var searchE_Date=this.searchEndDate.value;
            
             /*
            this.sta_13.set_visible("false");
            this.sta_16.set_visible("false");
            this.sta_17.set_visible("false");
            this.bookYear.set_visible("false");
            this.bookMonth.set_visible("false");
            this.deptCode.set_visible("false");
            */
            
         
         
         
         
            
         	this.ds_search.setColumn(0, "searchCondition",searchCondition);
        	this.ds_search.setColumn(0, "searchKeyword", searchKeyword);
        	this.ds_search.setColumn(0, "searchMonth",searchMonth);
        	this.ds_search.setColumn(0, "searchDate", searchDate);
        	this.ds_search.setColumn(0, "searchEmpNo", searchEmpNo);
        	
        	/*
        	   if(this.ds_search.getColumn(this.ds_search.rowposition, "searchCondition")==null ||
        		this.ds_search.getColumn(this.ds_search.rowposition, "searchCondition")=="")
        		{
        			this.ds_search.setColumn(0,"searchCondition","total");
        		}*/
            
        	
        	
         
           var oDatas =  {
        			  svcid : "searchAttendanceList",
        			  sController : "attendanceListSelectVO.do",			 
        			  inds :["ds_search=ds_search"],
        			  outds :[
        				 "ds_attendance_detail=output1"
        				 
        			     ],			     
        			  args  : [				
        			  ],
        			  bAsync : true,    // 비동기여부 (true : async  false: sync)
        			  nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			  bCompress :false,	 //			  
        			}; 
        			
        			
        	 trace(" this.ds_search : " + this.ds_search.saveXML());
        	 
        	 
        	  
            //공통 transaction 함수 호츨   //function callback 
        	Iject.transaction(this,oDatas,function(){   
        		
        	
        		if(this.errorcode < 0)
        		{
        		   Iject.alert(this.errorMsg);			
        		   return;
        		} 
        	      
        	       var pThis = this.fobj;   //form object	      
        	       //trace(" ds_attitude_book : " + pThis.ds_attitude_book.saveXML());
        	       
        	  }); //트랜잭션끝
        	
        	
        }

        
        this.Combo00_onitemchanged = function(obj,e)
        {
        	if(this.Combo00.index==1){
        	 this.searchEmpNo.set_visible("false");
        	 this.button04.set_visible("false");
        	 this.searchMonth.set_visible("false");
        	 this.searchDate.set_visible("true");
        	 }else if(this.Combo00.index==2){
        	 this.searchEmpNo.set_visible("false");
        	 this.button04.set_visible("false");
        	 this.searchDate.set_visible("false");
        	 this.searchMonth.set_visible("true");
        	 }else if(this.Combo00.index==3){
        	 this.searchEmpNo.set_visible("true");
        	 this.button04.set_visible("true");
        	 this.button04.set_enable("true");
        	 this.searchDate.set_visible("false");
        	 this.searchMonth.set_visible("false");
        	 }
        }
        
        });


        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload", this.form_onload, this);
            this.sta_title.addEventHandler("onclick", this.sta_title_onclick, this);
            this.sta_15.addEventHandler("onclick", this.sta_15_onclick, this);
            this.edt_att_book_no.addEventHandler("oneditclick", this.edt_btr_no2_oneditclick, this);
            this.sta_02.addEventHandler("onclick", this.sta_15_onclick, this);
            this.button04.addEventHandler("onclick", this.button04_onclick, this);
            this.Button01.addEventHandler("onclick", this.Button01_onclick, this);
            this.insert00.addEventHandler("onclick", this.div_Detail_insert_onclick, this);
            this.Button02.addEventHandler("onclick", this.Button03_onclick, this);
            this.reset.addEventHandler("onclick", this.fn_reset, this);
            this.sta_00.addEventHandler("onclick", this.sta_15_onclick, this);
            this.attendDate.addEventHandler("onmouseleave", this.attendDate_onmouseleave, this);
            this.sta_11.addEventHandler("onclick", this.sta_15_onclick, this);
            this.sta_12.addEventHandler("onclick", this.sta_15_onclick, this);
            this.sta_14.addEventHandler("onclick", this.sta_15_onclick, this);
            this.sta_17.addEventHandler("onclick", this.sta_15_onclick, this);
            this.attendCode.addEventHandler("onitemchanged", this.attendCode_onitemchanged, this);
            this.sta_03.addEventHandler("onclick", this.sta_15_onclick, this);
            this.button00.addEventHandler("onclick", this.button00_onclick, this);
            this.attendance_today.addEventHandler("onclick", this.attendance_today_onclick, this);
            this.Combo00.addEventHandler("onitemchanged", this.Combo00_onitemchanged, this);
            this.Button05.addEventHandler("onclick", this.Button05_onclick, this);
            this.sta_04.addEventHandler("onclick", this.sta_15_onclick, this);

        };

        this.loadIncludeScript("PD_IN_COM_ATTENDANCE_DETAIL.xfdl");

       
    };
}
)();
